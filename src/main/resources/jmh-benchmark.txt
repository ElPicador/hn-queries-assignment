# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Dvisualvm.id=200700747799060 -javaagent:/media/data/binaries/linux-64/JTools/idea-IC-182.3911.36/lib/idea_rt.jar=44595:/media/data/binaries/linux-64/JTools/idea-IC-182.3911.36/bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.algolia.assignment.app.QueriesBenchmark.distinctBenchmark

# Run progress: 0.00% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 0.262 s/op
Iteration   1: 0.242 s/op
                 Max memory heap: 899678208.000 bytes

Iteration   2: 0.241 s/op
                 Max memory heap: 899678208.000 bytes

Iteration   3: 0.251 s/op
                 Max memory heap: 909639680.000 bytes

Iteration   4: 0.238 s/op
                 Max memory heap: 909639680.000 bytes

Iteration   5: 0.243 s/op
                 Max memory heap: 909639680.000 bytes

Iteration   6: 0.241 s/op
                 Max memory heap: 909639680.000 bytes

Iteration   7: 0.252 s/op
                 Max memory heap: 911212544.000 bytes

Iteration   8: 0.243 s/op
                 Max memory heap: 911212544.000 bytes

Iteration   9: 0.239 s/op
                 Max memory heap: 911212544.000 bytes

Iteration  10: 0.241 s/op
                 Max memory heap: 911212544.000 bytes



Result "com.algolia.assignment.app.QueriesBenchmark.distinctBenchmark":
  0.243 ±(99.9%) 0.007 s/op [Average]
  (min, avg, max) = (0.238, 0.243, 0.252), stdev = 0.005
  CI (99.9%): [0.236, 0.250] (assumes normal distribution)

Secondary result "com.algolia.assignment.app.QueriesBenchmark.distinctBenchmark:Max memory heap":
  911212544.000 ±(99.9%) 0.001 bytes [Maximum]
  (min, avg, max) = (899678208.000, 908276531.200, 911212544.000), stdev = 4591970.129
  CI (99.9%): [911212544.000, 911212544.000] (assumes normal distribution)


# JMH version: 1.21
# VM version: JDK 1.8.0_181, OpenJDK 64-Bit Server VM, 25.181-b13
# VM invoker: /usr/lib/jvm/java-8-openjdk-amd64/jre/bin/java
# VM options: -Dvisualvm.id=200700747799060 -javaagent:/media/data/binaries/linux-64/JTools/idea-IC-182.3911.36/lib/idea_rt.jar=44595:/media/data/binaries/linux-64/JTools/idea-IC-182.3911.36/bin -Dfile.encoding=UTF-8
# Warmup: 1 iterations, 1 s each
# Measurement: 10 iterations, 1 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.algolia.assignment.app.QueriesBenchmark.popularBenchmark

# Run progress: 50.00% complete, ETA 00:00:17
# Fork: 1 of 1
# Warmup Iteration   1: 0.685 s/op
Iteration   1: 0.337 s/op
                 Max memory heap: 932184064.000 bytes

Iteration   2: 0.357 s/op
                 Max memory heap: 929562624.000 bytes

Iteration   3: 0.339 s/op
                 Max memory heap: 929562624.000 bytes

Iteration   4: 0.352 s/op
                 Max memory heap: 877133824.000 bytes

Iteration   5: 0.348 s/op
                 Max memory heap: 926941184.000 bytes

Iteration   6: 0.334 s/op
                 Max memory heap: 926941184.000 bytes

Iteration   7: 0.351 s/op
                 Max memory heap: 930611200.000 bytes

Iteration   8: 0.335 s/op
                 Max memory heap: 930611200.000 bytes

Iteration   9: 0.354 s/op
                 Max memory heap: 932184064.000 bytes

Iteration  10: 0.336 s/op
                 Max memory heap: 932184064.000 bytes



Result "com.algolia.assignment.app.QueriesBenchmark.popularBenchmark":
  0.344 ±(99.9%) 0.014 s/op [Average]
  (min, avg, max) = (0.334, 0.344, 0.357), stdev = 0.009
  CI (99.9%): [0.330, 0.358] (assumes normal distribution)

Secondary result "com.algolia.assignment.app.QueriesBenchmark.popularBenchmark:Max memory heap":
  932184064.000 ±(99.9%) 0.001 bytes [Maximum]
  (min, avg, max) = (877133824.000, 924791603.200, 932184064.000), stdev = 16857940.550
  CI (99.9%): [932184064.000, 932184064.000] (assumes normal distribution)


# Run complete. Total time: 00:00:33

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

Benchmark                                           Mode  Cnt          Score   Error  Units
QueriesBenchmark.distinctBenchmark                  avgt   10          0.243 ± 0.007   s/op
QueriesBenchmark.distinctBenchmark:Max memory heap  avgt   10  911212544.000          bytes
QueriesBenchmark.popularBenchmark                   avgt   10          0.344 ± 0.014   s/op
QueriesBenchmark.popularBenchmark:Max memory heap   avgt   10  932184064.000          bytes
